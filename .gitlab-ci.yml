image: gableroux/unity3d:2019.2.5f1

stages:
  - build_and_test
  - deploy

variables:
  BUILD_NAME: ExampleProjectName

.unity_before_script: &unity_before_script
  before_script:
    - chmod +x ./ci/before_script.sh && ./ci/before_script.sh

.cache: &cache
  cache:
    key: "$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$TEST_PLATFORM"
    paths:
      - Library/

# run this when you need to request a license again
# you will need to follow activation steps from documentation
# Look at the logs and grab the XML
get-license:
  when: manual
  stage: build_and_test
  <<: *cache
  script:
    - chmod +x ./ci/get_license.sh && ./ci/get_license.sh
    
get-android-license:
  when: manual
  stage: build_and_test
  image: gableroux/unity3d:2019.2.5f1-android
  <<: *cache
  script:
    - chmod +x ./ci/get_license.sh && ./ci/get_license.sh

.test: &test
  stage: build_and_test
  <<: *unity_before_script
  <<: *cache
  script:
    - chmod +x ./ci/test.sh && ./ci/test.sh
  artifacts:
    paths:
      - $(pwd)/$TEST_PLATFORM-results.xml

test:
  <<: *test
  variables:
    TEST_PLATFORM: playmode

.build: &build
  stage: build_and_test
  <<: *unity_before_script
  <<: *cache
  script:
    - chmod +x ./ci/build.sh && ./ci/build.sh
  artifacts:
    paths:
      - ./Builds/
#tip: uncomment following lines if you'd like to build only on master branch
#   only:
#     - master

build-StandaloneLinux64:
  <<: *build
  variables:
    BUILD_TARGET: StandaloneLinux64

build-StandaloneOSX:
  <<: *build
  variables:
    BUILD_TARGET: StandaloneOSX

#Note: build target names changed in recent versions, use this for versions < 2017.2:
# build-StandaloneOSXUniversal:
#   <<: *build
#   variables:
#     BUILD_TARGET: StandaloneOSXUniversal

build-StandaloneWindows64:
  <<: *build
  variables:
    BUILD_TARGET: StandaloneWindows64

build-WebGL:
  <<: *build
  variables:
    BUILD_TARGET: WebGL
    
build-android:
  <<: *build
  image: gableroux/unity3d:2019.2.5f1-android
  variables:
    BUILD_TARGET: Android

pages:
  image: alpine:latest
  stage: deploy
  script:
    - mv "./Builds/WebGL/${BUILD_NAME}" public
  artifacts:
    paths:
      - public
  only:
    - master

